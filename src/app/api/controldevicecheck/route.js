import { exec, spawn } from "child_process";
import path from "path";

let scrcpyProcess = null;

export async function POST(req) {
  try {
    const { ip } = await req.json();
    if (!ip) {
      return new Response(
        JSON.stringify({ message: "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏ IP" }),
        { status: 400 }
      );
    }

    // ‡πÉ‡∏ä‡πâ path ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö scrcpy CLI (‡πÑ‡∏°‡πà‡∏°‡∏µ .exe)
    const scrcpyPath = path.join(process.cwd(), 'src', 'scrcpy-win64-v3.1', 'scrcpy'); // ‡πÉ‡∏ä‡πâ‡∏ä‡∏∑‡πà‡∏≠ scrcpy CLI

    console.log(`üì° ‡πÄ‡∏õ‡∏¥‡∏î scrcpy ‡πÑ‡∏õ‡∏¢‡∏±‡∏á ${ip}`);
    
    // ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠‡∏ú‡πà‡∏≤‡∏ô scrcpy CLI
    scrcpyProcess = spawn(scrcpyPath, ["-s", `${ip}:5555`], {
      stdio: "ignore"
    });

       // ‡∏™‡πà‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏õ‡∏¥‡∏î scrcpy ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏¢‡∏±‡∏á frontend
       scrcpyProcess.on("exit", () => {
        console.log("‚ùå scrcpy ‡∏ñ‡∏π‡∏Å‡∏õ‡∏¥‡∏î");
        scrcpyProcess = null;
        // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏ó‡∏µ‡πà frontend
        return new Response(
          JSON.stringify({
            status: "disconnected",
            message: `scrcpy ‡∏ñ‡∏π‡∏Å‡∏õ‡∏¥‡∏î‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö ${ip}`,
          }),
          { status: 200, headers: { "Content-Type": "application/json" } }
        );
      });

    return new Response(
      JSON.stringify({
        status: "Connected",
        message: `‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ scrcpy ‡∏Å‡∏±‡∏ö ${ip} ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à`,
      }),
      { status: 200, headers: { "Content-Type": "application/json" } }
    );

  } catch (error) {
    console.error("‚ùå Error:", error);
    return new Response(
      JSON.stringify({
        status: "error",
        message: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏¥‡∏î scrcpy",
        error: error.message,
      }),
      { status: 500 }
    );
  }
}


export async function GET() {
    try {
      const result = await new Promise((resolve) => {
        exec("tasklist | findstr scrcpy", (err, stdout) => {
          resolve(stdout.includes("scrcpy") ? "Connected" : "Disconnected");
        });
      });
  
      return new Response(
        JSON.stringify({ status: result }),
        { status: 200, headers: { "Content-Type": "application/json" } }
      );
  
    } catch (error) {
      console.error("‚ùå Error:", error);
      return new Response(
        JSON.stringify({ status: "error", message: "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡πá‡∏Ñ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ scrcpy ‡πÑ‡∏î‡πâ", error: error.message }),
        { status: 500 }
      );
    }
  }